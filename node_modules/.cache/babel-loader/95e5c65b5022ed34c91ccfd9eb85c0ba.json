{"ast":null,"code":"import _classCallCheck from \"/home/wantech/Documents/projects/fourwalls/four-walls/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wantech/Documents/projects/fourwalls/four-walls/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wantech/Documents/projects/fourwalls/four-walls/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wantech/Documents/projects/fourwalls/four-walls/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wantech/Documents/projects/fourwalls/four-walls/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/wantech/Documents/projects/fourwalls/four-walls/src/components/Register/Register.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Container, Form, Button, Message } from 'semantic-ui-react';\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderEmailInput = function (_ref) {\n      var input = _ref.input,\n          label = _ref.label,\n          meta = _ref.meta;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, label), React.createElement(Form.Input, Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.renderPasswordInput = function (_ref2) {\n      var input = _ref2.input,\n          label = _ref2.label,\n          meta = _ref2.meta;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, label), React.createElement(Form.Input, Object.assign({}, input, {\n        autoComplete: \"off\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {};\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"renderError\",\n    value: function renderError(_ref3) {\n      var error = _ref3.error,\n          touched = _ref3.touched;\n\n      if (touched && error) {\n        return React.createElement(Message, {\n          error: true,\n          content: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Form, {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"registerName\",\n        component: this.renderEmailInput,\n        label: \"Enter Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"registerEmail\",\n        component: this.renderEmailInput,\n        label: \"Enter Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"registerPassword\",\n        component: this.renderPasswordInput,\n        label: \"Enter Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Sign In\"))));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\n;\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.registerName) {\n    errors.registerName = 'Please enter your name.';\n  }\n\n  if (!formValues.registerEmail) {\n    errors.registerEmail = 'Please enter a valid email.';\n  }\n\n  if (!formValues.registerPassword) {\n    errors.registerPassword = 'Password is incorect.';\n  }\n\n  return errors;\n};\n\nvar formWrapped = reduxForm({\n  form: 'registerForm',\n  touchOnBlur: false,\n  validate: validate\n})(Register);\nexport default connect(null)(formWrapped);","map":{"version":3,"sources":["/home/wantech/Documents/projects/fourwalls/four-walls/src/components/Register/Register.js"],"names":["React","connect","Field","reduxForm","Container","Form","Button","Message","Register","renderEmailInput","input","label","meta","className","error","touched","renderError","renderPasswordInput","onSubmit","formValues","props","handleSubmit","Component","validate","errors","registerName","registerEmail","registerPassword","formWrapped","form","touchOnBlur"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Container, Form, Button, Message } from 'semantic-ui-react';\n\nclass Register extends React.Component {\n\t\trenderError ({error, touched}) {\n\t\t\tif (touched && error) {\n\t\t\t\treturn (\n\t\t\t\t\t<Message error content={error} />\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\trenderEmailInput = ({ input, label, meta }) => {\n\t\t\tconst className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\t\t\treturn (\n\t\t\t\t<div className={className}>\n\t\t\t\t\t<label>{label}</label>\n\t\t\t\t\t<Form.Input {...input} autoComplete=\"off\" />\n\t\t\t\t\t{this.renderError(meta)}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\trenderPasswordInput = ({ input, label, meta }) => {\n\t\t\tconst className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\t\t\treturn (\n\t\t\t\t<div className={className}>\n\t\t\t\t\t<label>{label}</label>\n\t\t\t\t\t<Form.Input {...input} autoComplete=\"off\" type=\"password\"/>\n\t\t\t\t\t{this.renderError(meta)}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\tonSubmit = (formValues) => {\n\n\t\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Register</h1>\n\t\t\t\t\t<Form onSubmit={this.props.handleSubmit(this.onSubmit)} error>\n\t\t\t\t\t\t<Field name=\"registerName\" component={this.renderEmailInput} label=\"Enter Name\" />\n\t\t\t\t\t\t<Field name=\"registerEmail\" component={this.renderEmailInput} label=\"Enter Email\" /> \n\t\t\t\t\t\t<Field name=\"registerPassword\" component={this.renderPasswordInput} label=\"Enter Password\" />  \n\t\t\t\t\t\t<Button>Sign In</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t);\n\t}\n};\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\n\tif (!formValues.registerName) {\n\t\terrors.registerName = 'Please enter your name.';\n\t}\n\n\tif (!formValues.registerEmail) {\n\t\terrors.registerEmail = 'Please enter a valid email.';\n\t}\n\n\tif (!formValues.registerPassword) {\n\t\terrors.registerPassword = 'Password is incorect.';\n\t}\n\n\treturn errors;\n};\n\nconst formWrapped = reduxForm({\n\tform: 'registerForm',\n\ttouchOnBlur: false,\n\tvalidate\n})(Register)\n\nexport default connect(null)(formWrapped);"]},"metadata":{},"sourceType":"module"}