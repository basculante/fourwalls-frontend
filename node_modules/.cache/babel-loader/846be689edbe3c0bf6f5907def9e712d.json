{"ast":null,"code":"import axios from 'axios';\nexport function authenticatedSubmitMaxes(id, squat, bench, deadlift, ohp, powerclean, squatIncrement, benchIncrement, deadliftIncrement, ohpIncrement, powercleanIncrement, goal, history) {\n  return function (dispatch) {\n    axios({\n      method: 'put',\n      url: 'http://localhost:3000/maxes',\n      data: {\n        id: id,\n        squat: squat,\n        bench: bench,\n        deadlift: deadlift,\n        ohp: ohp,\n        powerclean: powerclean,\n        squatIncrement: squatIncrement,\n        benchIncrement: benchIncrement,\n        deadliftIncrement: deadliftIncrement,\n        ohpIncrement: ohpIncrement,\n        powercleanIncrement: powercleanIncrement\n      }\n    }).then(function (maxes) {\n      if (maxes && goal === 'strength') {\n        dispatch({\n          type: 'UPDATED_MAXES_AUTHENTICATED',\n          payload: maxes.data\n        });\n        history.push('/strength');\n      } else if (maxes && goal === 'bodybuilding') {\n        dispatch({\n          type: 'UPDATED_MAXES_AUTHENTICATED',\n          payload: maxes.data\n        });\n        history.push('/bodybuilding');\n      }\n    });\n  };\n}\n;\nexport function unauthenticatedSubmitMaxes(squat, bench, deadlift, ohp, powerclean, squatIncrement, goal, history) {\n  if (goal === \"strength\") {\n    history.push('/strength');\n  } else if (goal === 'bodybuilding') {\n    history.push('/bodybuilding');\n  }\n\n  return {\n    type: 'UPDATED_MAXES_UNAUTHENTICATED',\n    payload: {\n      squat: squat,\n      bench: bench,\n      deadlift: deadlift,\n      ohp: ohp,\n      powerclean: powerclean,\n      squatIncrement: squatIncrement\n    }\n  };\n}","map":{"version":3,"sources":["/home/wantech/Documents/projects/fourwalls2/four-walls/src/actions/maxes.js"],"names":["axios","authenticatedSubmitMaxes","id","squat","bench","deadlift","ohp","powerclean","squatIncrement","benchIncrement","deadliftIncrement","ohpIncrement","powercleanIncrement","goal","history","dispatch","method","url","data","then","maxes","type","payload","push","unauthenticatedSubmitMaxes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,wBAAT,CAAkCC,EAAlC,EAAsCC,KAAtC,EAA6CC,KAA7C,EAAoDC,QAApD,EAA8DC,GAA9D,EAAmEC,UAAnE,EAA+EC,cAA/E,EAA+FC,cAA/F,EAA+GC,iBAA/G,EAAkIC,YAAlI,EAAgJC,mBAAhJ,EAAqKC,IAArK,EAA2KC,OAA3K,EAAoL;AAC1L,SAAO,UAACC,QAAD,EAAc;AACpBf,IAAAA,KAAK,CAAC;AACLgB,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,GAAG,EAAE,6BAFA;AAGLC,MAAAA,IAAI,EAAE;AACLhB,QAAAA,EAAE,EAAFA,EADK;AAELC,QAAAA,KAAK,EAALA,KAFK;AAGLC,QAAAA,KAAK,EAALA,KAHK;AAILC,QAAAA,QAAQ,EAARA,QAJK;AAKLC,QAAAA,GAAG,EAAHA,GALK;AAMLC,QAAAA,UAAU,EAAVA,UANK;AAOLC,QAAAA,cAAc,EAAdA,cAPK;AAQLC,QAAAA,cAAc,EAAdA,cARK;AASLC,QAAAA,iBAAiB,EAAjBA,iBATK;AAULC,QAAAA,YAAY,EAAZA,YAVK;AAWLC,QAAAA,mBAAmB,EAAnBA;AAXK;AAHD,KAAD,CAAL,CAiBEO,IAjBF,CAiBO,UAAAC,KAAK,EAAI;AACd,UAAIA,KAAK,IAAIP,IAAI,KAAK,UAAtB,EAAkC;AACjCE,QAAAA,QAAQ,CAAE;AAACM,UAAAA,IAAI,EAAE,6BAAP;AAAsCC,UAAAA,OAAO,EAAEF,KAAK,CAACF;AAArD,SAAF,CAAR;AACAJ,QAAAA,OAAO,CAACS,IAAR,CAAa,WAAb;AACA,OAHD,MAGO,IAAIH,KAAK,IAAIP,IAAI,KAAK,cAAtB,EAAsC;AAC5CE,QAAAA,QAAQ,CAAE;AAACM,UAAAA,IAAI,EAAE,6BAAP;AAAsCC,UAAAA,OAAO,EAAEF,KAAK,CAACF;AAArD,SAAF,CAAR;AACAJ,QAAAA,OAAO,CAACS,IAAR,CAAa,eAAb;AACA;AACF,KAzBD;AA0BA,GA3BD;AA4BA;AAAA;AAED,OAAO,SAASC,0BAAT,CAAoCrB,KAApC,EAA2CC,KAA3C,EAAkDC,QAAlD,EAA4DC,GAA5D,EAAiEC,UAAjE,EAA6EC,cAA7E,EAA6FK,IAA7F,EAAmGC,OAAnG,EAA4G;AACjH,MAAID,IAAI,KAAK,UAAb,EAAyB;AACzBC,IAAAA,OAAO,CAACS,IAAR,CAAa,WAAb;AACA,GAFA,MAEM,IAAIV,IAAI,KAAK,cAAb,EAA6B;AACnCC,IAAAA,OAAO,CAACS,IAAR,CAAa,eAAb;AACA;;AACD,SACC;AACCF,IAAAA,IAAI,EAAE,+BADP;AAECC,IAAAA,OAAO,EAAE;AACRnB,MAAAA,KAAK,EAALA,KADQ;AAERC,MAAAA,KAAK,EAALA,KAFQ;AAGRC,MAAAA,QAAQ,EAARA,QAHQ;AAIRC,MAAAA,GAAG,EAAHA,GAJQ;AAKRC,MAAAA,UAAU,EAAVA,UALQ;AAMRC,MAAAA,cAAc,EAAdA;AANQ;AAFV,GADD;AAaA","sourcesContent":["import axios from 'axios';\n\nexport function authenticatedSubmitMaxes(id, squat, bench, deadlift, ohp, powerclean, squatIncrement, benchIncrement, deadliftIncrement, ohpIncrement, powercleanIncrement, goal, history) {\n\treturn (dispatch) => {\n\t\taxios({\n\t\t\tmethod: 'put',\n\t\t\turl: 'http://localhost:3000/maxes',\n\t\t\tdata: {\n\t\t\t\tid,\n\t\t\t\tsquat,\n\t\t\t\tbench,\n\t\t\t\tdeadlift,\n\t\t\t\tohp,\n\t\t\t\tpowerclean,\n\t\t\t\tsquatIncrement,\n\t\t\t\tbenchIncrement,\n\t\t\t\tdeadliftIncrement,\n\t\t\t\tohpIncrement,\n\t\t\t\tpowercleanIncrement\n\t\t\t}\n\t\t})\n\t\t\t.then(maxes => {\n\t\t\t\tif (maxes && goal === 'strength') {\n\t\t\t\t\tdispatch ({type: 'UPDATED_MAXES_AUTHENTICATED', payload: maxes.data})\n\t\t\t\t\thistory.push('/strength')\n\t\t\t\t} else if (maxes && goal === 'bodybuilding') {\n\t\t\t\t\tdispatch ({type: 'UPDATED_MAXES_AUTHENTICATED', payload: maxes.data})\n\t\t\t\t\thistory.push('/bodybuilding')\n\t\t\t\t}\n\t\t});\n\t};\n};\n\nexport function unauthenticatedSubmitMaxes(squat, bench, deadlift, ohp, powerclean, squatIncrement, goal, history) {\n\t\tif (goal === \"strength\") {\n\t\thistory.push('/strength')\n\t} else if (goal === 'bodybuilding') {\n\t\thistory.push('/bodybuilding')\n\t}\n\treturn (\n\t\t{\n\t\t\ttype: 'UPDATED_MAXES_UNAUTHENTICATED',\n\t\t\tpayload: {\n\t\t\t\tsquat,\n\t\t\t\tbench,\n\t\t\t\tdeadlift,\n\t\t\t\tohp,\n\t\t\t\tpowerclean,\n\t\t\t\tsquatIncrement,\n\t\t\t}\n\t\t}\n\t)\n}"]},"metadata":{},"sourceType":"module"}