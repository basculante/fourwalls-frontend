{"ast":null,"code":"import _classCallCheck from \"/home/wantech/Documents/projects/fourwalls/four-walls/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wantech/Documents/projects/fourwalls/four-walls/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wantech/Documents/projects/fourwalls/four-walls/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wantech/Documents/projects/fourwalls/four-walls/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wantech/Documents/projects/fourwalls/four-walls/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/wantech/Documents/projects/fourwalls/four-walls/src/components/Maxes/Maxes.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Grid, Form, Button, Message } from 'semantic-ui-react';\n\nvar Maxes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Maxes, _React$Component);\n\n  function Maxes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Maxes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Maxes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function (_ref) {\n      var input = _ref.input,\n          label = _ref.label,\n          meta = _ref.meta;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, label), React.createElement(Form.Input, Object.assign({}, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {};\n\n    return _this;\n  }\n\n  _createClass(Maxes, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var error = _ref2.error,\n          touched = _ref2.touched;\n\n      if (touched && error) {\n        return React.createElement(Message, {\n          error: true,\n          content: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"squat\",\n        component: this.renderInput,\n        label: \"Squat Max\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"bench\",\n        component: this.renderInput,\n        label: \"Bench Max\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"deadlift\",\n        component: this.renderInput,\n        label: \"Deadlift Max\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Maxes;\n}(React.Component);\n\n;\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.squat) {\n    errors.squat = 'Please enter your squat max.';\n  }\n\n  if (!formValues.bench) {\n    errors.bench = 'Please enter your bench max.';\n  }\n\n  if (!formValues.deadlift) {\n    errors.deadlift = 'Please enter your deadlift max.';\n  }\n\n  return errors;\n};\n\nvar formWrapped = reduxForm({\n  form: 'maxForm',\n  validate: validate\n})(Maxes);\nexport default connect(null)(formWrapped);","map":{"version":3,"sources":["/home/wantech/Documents/projects/fourwalls/four-walls/src/components/Maxes/Maxes.js"],"names":["React","connect","Field","reduxForm","Grid","Form","Button","Message","Maxes","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","props","handleSubmit","Component","validate","errors","squat","bench","deadlift","formWrapped","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Grid, Form, Button, Message } from 'semantic-ui-react';\n\nclass Maxes extends React.Component {\n\t\trenderError ({error, touched}) {\n\t\t\tif (touched && error) {\n\t\t\t\treturn (\n\t\t\t\t\t<Message error content={error} />\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\trenderInput = ({ input, label, meta }) => {\n\t\t\tconst className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\t\t\treturn (\n\t\t\t\t<div className={className}>\n\t\t\t\t\t<label>{label}</label>\n\t\t\t\t\t<Form.Input {...input} />\n\t\t\t\t\t{this.renderError(meta)}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\tonSubmit = (formValues) => {\n\n\t\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n\t\t\t\t\t<Field name=\"squat\" component={this.renderInput} label=\"Squat Max\" /> \n\t\t\t\t\t<Field name=\"bench\" component={this.renderInput} label=\"Bench Max\" /> \n\t\t\t\t\t<Field name=\"deadlift\" component={this.renderInput} label=\"Deadlift Max\" /> \n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\n\tif (!formValues.squat) {\n\t\terrors.squat = 'Please enter your squat max.';\n\t}\n\n\tif (!formValues.bench) {\n\t\terrors.bench = 'Please enter your bench max.';\n\t}\n\n\tif (!formValues.deadlift) {\n\t\terrors.deadlift = 'Please enter your deadlift max.';\n\t}\n\n\treturn errors;\n};\n\nconst formWrapped = reduxForm({\n\tform: 'maxForm',\n\tvalidate\n})(Maxes)\n\nexport default connect(null)(formWrapped);"]},"metadata":{},"sourceType":"module"}